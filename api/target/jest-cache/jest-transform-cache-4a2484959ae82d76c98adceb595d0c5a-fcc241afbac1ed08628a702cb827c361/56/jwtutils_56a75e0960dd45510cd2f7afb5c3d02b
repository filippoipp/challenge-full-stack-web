e14607af48ebf9556bf34d3a980f6681
"use strict";

/* istanbul ignore next */
function cov_bggd0lbrv() {
  var path = "/home/filippoippolitorodrigues/\xC1rea de Trabalho/MYPROJECTS/challenge-full-stack-web/api/src/utils/jwt.utils.ts";
  var hash = "da71544c5e6fb24a796694d5cfeecf1965b0081e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/filippoippolitorodrigues/\xC1rea de Trabalho/MYPROJECTS/challenge-full-stack-web/api/src/utils/jwt.utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 55
        }
      },
      "26": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "27": {
        start: {
          line: 28,
          column: 11
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "28": {
        start: {
          line: 29,
          column: 13
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "29": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "30": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "31": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 67
        }
      },
      "32": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "33": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 79
        }
      },
      "34": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "35": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "36": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "37": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 50,
          column: 37
        }
      },
      "38": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 37
        }
      },
      "39": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "40": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "generateToken",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 22
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 30
      },
      "7": {
        name: "validateToken",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 22
          }
        },
        loc: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 42
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 24
          }
        },
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 48,
            column: 68
          },
          end: {
            line: 48,
            column: 69
          }
        },
        loc: {
          start: {
            line: 48,
            column: 88
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 50,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 50,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/home/filippoippolitorodrigues/\xC1rea de Trabalho/MYPROJECTS/challenge-full-stack-web/api/src/utils/jwt.utils.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAEsB;AACtB,uCAAyB;AACzB,2CAA6B;AAE7B,SAAgB,aAAa;IAC3B,MAAM,UAAU,GAAG;QACjB,GAAG,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;QAC/D,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;KACxC,CAAC;IAEF,MAAM,aAAa,GAAgB;QACjC,SAAS,EAAE,OAAO;QAClB,SAAS,EAAE,KAAK;KACjB,CAAC;IAEF,OAAO,IAAA,mBAAI,EAAC,EAAE,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;AAC7C,CAAC;AAZD,sCAYC;AASD,SAAgB,aAAa,CAAC,KAAa;IACzC,MAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAE5E,MAAM,aAAa,GAAkB;QACnC,UAAU,EAAE,CAAC,OAAO,CAAC;KACtB,CAAC;IAEF,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAA,qBAAM,EAAC,KAAK,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC,KAAK,EAAE,OAAqB,EAAE,EAAE;YACvE,IAAI,KAAK;gBAAE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;YAEhC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,sCAcC",
      names: [],
      sources: ["/home/filippoippolitorodrigues/\xC1rea de Trabalho/MYPROJECTS/challenge-full-stack-web/api/src/utils/jwt.utils.ts"],
      sourcesContent: ["import {\n  sign, SignOptions, verify, VerifyOptions,\n} from 'jsonwebtoken';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport function generateToken() {\n  const privateKey = {\n    key: fs.readFileSync(path.join(__dirname, '../../private.pem')),\n    passphrase: process.env.AUTH_PASSPHRASE,\n  };\n\n  const signInOptions: SignOptions = {\n    algorithm: 'RS256',\n    expiresIn: '24h',\n  };\n\n  return sign({}, privateKey, signInOptions);\n}\n\ninterface TokenPayload {\n  exp: number;\n  accessTypes: string[];\n  name: string;\n  userId: number;\n}\n\nexport function validateToken(token: string): Promise<TokenPayload> {\n  const publicKey = fs.readFileSync(path.join(__dirname, '../../public.pem'));\n\n  const verifyOptions: VerifyOptions = {\n    algorithms: ['RS256'],\n  };\n\n  return new Promise((resolve, reject) => {\n    verify(token, publicKey, verifyOptions, (error, decoded: TokenPayload) => {\n      if (error) return reject(error);\n\n      resolve(decoded);\n    });\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "da71544c5e6fb24a796694d5cfeecf1965b0081e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bggd0lbrv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_bggd0lbrv();

var __createBinding =
/* istanbul ignore next */
(cov_bggd0lbrv().s[0]++,
/* istanbul ignore next */
(cov_bggd0lbrv().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_bggd0lbrv().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_bggd0lbrv().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_bggd0lbrv().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[0]++;
  cov_bggd0lbrv().s[1]++;

  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_bggd0lbrv().b[2][0]++;
    cov_bggd0lbrv().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_bggd0lbrv().b[2][1]++;
  }

  var desc =
  /* istanbul ignore next */
  (cov_bggd0lbrv().s[3]++, Object.getOwnPropertyDescriptor(m, k));

  /* istanbul ignore next */
  cov_bggd0lbrv().s[4]++;

  if (
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[5][1]++,
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_bggd0lbrv().b[3][0]++;
    cov_bggd0lbrv().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_bggd0lbrv().f[1]++;
        cov_bggd0lbrv().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_bggd0lbrv().b[3][1]++;
  }

  cov_bggd0lbrv().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_bggd0lbrv().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[2]++;
  cov_bggd0lbrv().s[8]++;

  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_bggd0lbrv().b[7][0]++;
    cov_bggd0lbrv().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_bggd0lbrv().b[7][1]++;
  }

  cov_bggd0lbrv().s[10]++;
  o[k2] = m[k];
})));

var __setModuleDefault =
/* istanbul ignore next */
(cov_bggd0lbrv().s[11]++,
/* istanbul ignore next */
(cov_bggd0lbrv().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_bggd0lbrv().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_bggd0lbrv().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_bggd0lbrv().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[3]++;
  cov_bggd0lbrv().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_bggd0lbrv().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[4]++;
  cov_bggd0lbrv().s[13]++;
  o["default"] = v;
})));

var __importStar =
/* istanbul ignore next */
(cov_bggd0lbrv().s[14]++,
/* istanbul ignore next */
(cov_bggd0lbrv().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_bggd0lbrv().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_bggd0lbrv().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[5]++;
  cov_bggd0lbrv().s[15]++;

  if (
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_bggd0lbrv().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_bggd0lbrv().b[11][0]++;
    cov_bggd0lbrv().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_bggd0lbrv().b[11][1]++;
  }

  var result =
  /* istanbul ignore next */
  (cov_bggd0lbrv().s[17]++, {});

  /* istanbul ignore next */
  cov_bggd0lbrv().s[18]++;

  if (mod != null) {
    /* istanbul ignore next */
    cov_bggd0lbrv().b[13][0]++;
    cov_bggd0lbrv().s[19]++;

    for (var k in mod) {
      /* istanbul ignore next */
      cov_bggd0lbrv().s[20]++;

      if (
      /* istanbul ignore next */
      (cov_bggd0lbrv().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_bggd0lbrv().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_bggd0lbrv().b[14][0]++;
        cov_bggd0lbrv().s[21]++;

        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_bggd0lbrv().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_bggd0lbrv().b[13][1]++;
  }

  cov_bggd0lbrv().s[22]++;

  __setModuleDefault(result, mod);

  /* istanbul ignore next */
  cov_bggd0lbrv().s[23]++;
  return result;
}));

/* istanbul ignore next */
cov_bggd0lbrv().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_bggd0lbrv().s[25]++;
exports.validateToken = exports.generateToken = void 0;
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_bggd0lbrv().s[26]++, require("jsonwebtoken"));
const fs =
/* istanbul ignore next */
(cov_bggd0lbrv().s[27]++, __importStar(require("fs")));
const path =
/* istanbul ignore next */
(cov_bggd0lbrv().s[28]++, __importStar(require("path")));

function generateToken() {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[6]++;
  const privateKey =
  /* istanbul ignore next */
  (cov_bggd0lbrv().s[29]++, {
    key: fs.readFileSync(path.join(__dirname, '../../private.pem')),
    passphrase: process.env.AUTH_PASSPHRASE
  });
  const signInOptions =
  /* istanbul ignore next */
  (cov_bggd0lbrv().s[30]++, {
    algorithm: 'RS256',
    expiresIn: '24h'
  });

  /* istanbul ignore next */
  cov_bggd0lbrv().s[31]++;
  return (0, jsonwebtoken_1.sign)({}, privateKey, signInOptions);
}

/* istanbul ignore next */
cov_bggd0lbrv().s[32]++;
exports.generateToken = generateToken;

function validateToken(token) {
  /* istanbul ignore next */
  cov_bggd0lbrv().f[7]++;
  const publicKey =
  /* istanbul ignore next */
  (cov_bggd0lbrv().s[33]++, fs.readFileSync(path.join(__dirname, '../../public.pem')));
  const verifyOptions =
  /* istanbul ignore next */
  (cov_bggd0lbrv().s[34]++, {
    algorithms: ['RS256']
  });

  /* istanbul ignore next */
  cov_bggd0lbrv().s[35]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_bggd0lbrv().f[8]++;
    cov_bggd0lbrv().s[36]++;
    (0, jsonwebtoken_1.verify)(token, publicKey, verifyOptions, (error, decoded) => {
      /* istanbul ignore next */
      cov_bggd0lbrv().f[9]++;
      cov_bggd0lbrv().s[37]++;

      if (error) {
        /* istanbul ignore next */
        cov_bggd0lbrv().b[16][0]++;
        cov_bggd0lbrv().s[38]++;
        return reject(error);
      } else
      /* istanbul ignore next */
      {
        cov_bggd0lbrv().b[16][1]++;
      }

      cov_bggd0lbrv().s[39]++;
      resolve(decoded);
    });
  });
}

/* istanbul ignore next */
cov_bggd0lbrv().s[40]++;
exports.validateToken = validateToken;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7O0FBRUEsU0FBZ0JBLGFBQWhCLEdBQTZCO0VBQUE7RUFBQTtFQUMzQixNQUFNQyxVQUFVO0VBQUE7RUFBQSwwQkFBRztJQUNqQkMsR0FBRyxFQUFFQyxFQUFFLENBQUNDLFlBQUgsQ0FBZ0JDLElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLG1CQUFyQixDQUFoQixDQURZO0lBRWpCQyxVQUFVLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztFQUZQLENBQUgsQ0FBaEI7RUFLQSxNQUFNQyxhQUFhO0VBQUE7RUFBQSwwQkFBZ0I7SUFDakNDLFNBQVMsRUFBRSxPQURzQjtJQUVqQ0MsU0FBUyxFQUFFO0VBRnNCLENBQWhCLENBQW5COztFQU4yQjtFQUFBO0VBVzNCLE9BQU8seUJBQUssRUFBTCxFQUFTYixVQUFULEVBQXFCVyxhQUFyQixDQUFQO0FBQ0Q7Ozs7QUFaREc7O0FBcUJBLFNBQWdCQyxhQUFoQixDQUE4QkMsS0FBOUIsRUFBMkM7RUFBQTtFQUFBO0VBQ3pDLE1BQU1DLFNBQVM7RUFBQTtFQUFBLDBCQUFHZixFQUFFLENBQUNDLFlBQUgsQ0FBZ0JDLElBQUksQ0FBQ0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLGtCQUFyQixDQUFoQixDQUFILENBQWY7RUFFQSxNQUFNWSxhQUFhO0VBQUE7RUFBQSwwQkFBa0I7SUFDbkNDLFVBQVUsRUFBRSxDQUFDLE9BQUQ7RUFEdUIsQ0FBbEIsQ0FBbkI7O0VBSHlDO0VBQUE7RUFPekMsT0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQW9CO0lBQUE7SUFBQTtJQUFBO0lBQ3JDLDJCQUFPTixLQUFQLEVBQWNDLFNBQWQsRUFBeUJDLGFBQXpCLEVBQXdDLENBQUNLLEtBQUQsRUFBUUMsT0FBUixLQUFpQztNQUFBO01BQUE7TUFBQTs7TUFDdkUsSUFBSUQsS0FBSixFQUFXO1FBQUE7UUFBQTtRQUFBO1FBQUEsT0FBT0QsTUFBTSxDQUFDQyxLQUFELENBQWI7TUFBcUIsQ0FBaEM7TUFBQTtNQUFBO1FBQUE7TUFBQTs7TUFEdUU7TUFHdkVGLE9BQU8sQ0FBQ0csT0FBRCxDQUFQO0lBQ0QsQ0FKRDtFQUtELENBTk0sQ0FBUDtBQU9EOzs7O0FBZERWIiwibmFtZXMiOlsiZ2VuZXJhdGVUb2tlbiIsInByaXZhdGVLZXkiLCJrZXkiLCJmcyIsInJlYWRGaWxlU3luYyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwicGFzc3BocmFzZSIsInByb2Nlc3MiLCJlbnYiLCJBVVRIX1BBU1NQSFJBU0UiLCJzaWduSW5PcHRpb25zIiwiYWxnb3JpdGhtIiwiZXhwaXJlc0luIiwiZXhwb3J0cyIsInZhbGlkYXRlVG9rZW4iLCJ0b2tlbiIsInB1YmxpY0tleSIsInZlcmlmeU9wdGlvbnMiLCJhbGdvcml0aG1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvciIsImRlY29kZWQiXSwic291cmNlcyI6WyIvaG9tZS9maWxpcHBvaXBwb2xpdG9yb2RyaWd1ZXMvw4FyZWEgZGUgVHJhYmFsaG8vTVlQUk9KRUNUUy9jaGFsbGVuZ2UtZnVsbC1zdGFjay13ZWIvYXBpL3NyYy91dGlscy9qd3QudXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgc2lnbiwgU2lnbk9wdGlvbnMsIHZlcmlmeSwgVmVyaWZ5T3B0aW9ucyxcbn0gZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVRva2VuKCkge1xuICBjb25zdCBwcml2YXRlS2V5ID0ge1xuICAgIGtleTogZnMucmVhZEZpbGVTeW5jKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8uLi9wcml2YXRlLnBlbScpKSxcbiAgICBwYXNzcGhyYXNlOiBwcm9jZXNzLmVudi5BVVRIX1BBU1NQSFJBU0UsXG4gIH07XG5cbiAgY29uc3Qgc2lnbkluT3B0aW9uczogU2lnbk9wdGlvbnMgPSB7XG4gICAgYWxnb3JpdGhtOiAnUlMyNTYnLFxuICAgIGV4cGlyZXNJbjogJzI0aCcsXG4gIH07XG5cbiAgcmV0dXJuIHNpZ24oe30sIHByaXZhdGVLZXksIHNpZ25Jbk9wdGlvbnMpO1xufVxuXG5pbnRlcmZhY2UgVG9rZW5QYXlsb2FkIHtcbiAgZXhwOiBudW1iZXI7XG4gIGFjY2Vzc1R5cGVzOiBzdHJpbmdbXTtcbiAgbmFtZTogc3RyaW5nO1xuICB1c2VySWQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlVG9rZW4odG9rZW46IHN0cmluZyk6IFByb21pc2U8VG9rZW5QYXlsb2FkPiB7XG4gIGNvbnN0IHB1YmxpY0tleSA9IGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vLi4vcHVibGljLnBlbScpKTtcblxuICBjb25zdCB2ZXJpZnlPcHRpb25zOiBWZXJpZnlPcHRpb25zID0ge1xuICAgIGFsZ29yaXRobXM6IFsnUlMyNTYnXSxcbiAgfTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHZlcmlmeSh0b2tlbiwgcHVibGljS2V5LCB2ZXJpZnlPcHRpb25zLCAoZXJyb3IsIGRlY29kZWQ6IFRva2VuUGF5bG9hZCkgPT4ge1xuICAgICAgaWYgKGVycm9yKSByZXR1cm4gcmVqZWN0KGVycm9yKTtcblxuICAgICAgcmVzb2x2ZShkZWNvZGVkKTtcbiAgICB9KTtcbiAgfSk7XG59XG4iXX0=