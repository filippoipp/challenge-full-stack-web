{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVD;AAAA;AAAA;;AAEA,eAAeA,UAAf,CAA0BC,GAA1B,EAAwCC,GAAxC,EAAuDC,IAAvD,EAAyE;EAAA;EAAA;EAAA;;EACvE,IAAI;IACF,MAAMC,UAAU;IAAA;IAAA,yBAAG,IAAIC,oBAAJ,EAAH,CAAhB;IACA,MAAMC,QAAQ;IAAA;IAAA,yBAAG,MAAMF,UAAU,CAACJ,UAAX,CAAsBC,GAAG,CAACM,IAA1B,CAAT,CAAd;;IAFE;IAAA;IAGFL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,QAArB;EACD,CAJD,CAIE,OAAOI,KAAP,EAAc;IAAA;IAAA;IACdP,IAAI,CAACO,KAAD,CAAJ;EACD;AACF;;;;AAEDC,kBAAe;EACbX;AADa,CAAf","names":["createUser","req","res","next","repository","repository_1","response","body","status","json","error","exports"],"sources":["/home/filippoippolitorodrigues/√Årea de Trabalho/MYPROJECTS/challenge-full-stack-web/api/src/domain/user/controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport UserRepository from './repository';\n\nasync function createUser(req: Request, res: Response, next: NextFunction) {\n  try {\n    const repository = new UserRepository();\n    const response = await repository.createUser(req.body);\n    res.status(201).json(response);\n  } catch (error) {\n    next(error);\n  }\n}\n\nexport default {\n  createUser,\n};\n"]}