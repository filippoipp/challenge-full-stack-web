{"file":"/home/filippoippolitorodrigues/Área de Trabalho/MYPROJECTS/strider/mocks/typeorm.mock.ts","mappings":";;;AAQA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1B,mBAAmB,EAAE,GAAG,EAAE,CAAC,sBAAc;IACzC,aAAa,EAAE,GAAG,EAAE,CAAC,sBAAc;IACnC,aAAa,EAAE,GAAG,EAAE,CAAC,sBAAc;IAEnC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACvB,aAAa,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAC9B,sBAAsB,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACvC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACvB,gBAAgB,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACjC,gBAAgB,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACjC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACvB,UAAU,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAC3B,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAC1B,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACzB,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAC1B,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAC1B,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;IACrB,gBAAgB,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;CAClC,CAAC,CAAC,CAAC;AA3BJ,6DAA6D;AAC7D,2DAAqD;AAGxC,QAAA,cAAc,GAAG,IAAA,yBAAI,GAAmB,CAAC;AACzC,QAAA,cAAc,GAA0B,IAAA,yBAAI,GAAc,CAAC;AAC3D,QAAA,sBAAsB,GAAG,IAAA,yBAAI,GAA2B,CAAC","names":[],"sources":["/home/filippoippolitorodrigues/Área de Trabalho/MYPROJECTS/strider/mocks/typeorm.mock.ts"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { mock, MockProxy } from 'jest-mock-extended';\nimport { Connection, Repository, SelectQueryBuilder } from 'typeorm';\n\nexport const repositoryMock = mock<Repository<any>>();\nexport const connectionMock: MockProxy<Connection> = mock<Connection>();\nexport const selectQueryBuilderMock = mock<SelectQueryBuilder<any>>();\n\njest.mock('typeorm', () => ({\n  getCustomRepository: () => repositoryMock,\n  getRepository: () => repositoryMock,\n  getConnection: () => connectionMock,\n\n  Entity: () => () => { },\n  PrimaryColumn: () => () => { },\n  PrimaryGeneratedColumn: () => () => { },\n  Column: () => () => { },\n  CreateDateColumn: () => () => { },\n  UpdateDateColumn: () => () => { },\n  Unique: () => () => { },\n  JoinColumn: () => () => { },\n  JoinTable: () => () => { },\n  OneToOne: () => () => { },\n  OneToMany: () => () => { },\n  ManyToOne: () => () => { },\n  Repository: jest.fn(),\n  EntityRepository: () => () => { },\n}));\n"],"version":3}