{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXD;AAAA;AAAA;;AAEA,eAAeA,OAAf,CAAuBC,GAAvB,EAAqCC,GAArC,EAAoDC,IAApD,EAAsE;EAAA;EAAA;EAAA;;EACpE,IAAI;IACF,MAAMC,UAAU;IAAA;IAAA,0BAAG,IAAIC,oBAAJ,EAAH,CAAhB;IACA,MAAMC,IAAI;IAAA;IAAA,0BAAG,MAAMF,UAAU,CAACJ,OAAX,CAAmBC,GAAG,CAACM,MAAJ,CAAWC,QAA9B,CAAT,CAAV;;IAFE;IAAA;IAIFN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAArB;EACD,CALD,CAKE,OAAOK,KAAP,EAAc;IAAA;IAAA;IACdR,IAAI,CAACQ,KAAD,CAAJ;EACD;AACF;;;;AAEDC,kBAAe;EACbZ;AADa,CAAf","names":["getUser","req","res","next","repository","repository_1","user","params","username","status","json","error","exports"],"sources":["/home/filippoippolitorodrigues/√Årea de Trabalho/MYPROJECTS/strider/src/domain/user/controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport UserRepository from './repository';\n\nasync function getUser(req: Request, res: Response, next: NextFunction) {\n  try {\n    const repository = new UserRepository();\n    const user = await repository.getUser(req.params.username);\n\n    res.status(201).json(user);\n  } catch (error) {\n    next(error);\n  }\n}\n\nexport default {\n  getUser,\n};\n"]}