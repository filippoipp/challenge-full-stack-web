{"file":"/home/filippoippolitorodrigues/Área de Trabalho/MYPROJECTS/strider/src/domain/post/entities/post.ts","mappings":";;;;;;;;;;;;;;;AAAA,qCASiB;AACjB,2CAA2C;AAC3C,oEAA4C;AAI5C,IAAqB,IAAI,YAAzB,MAAqB,IAAI;CAmCxB,CAAA;AAjCC;IADC,IAAA,gCAAsB,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;gCACpC;AAGX;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;;oCACb;AAIf;IAFC,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;IAC/B,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,cAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;8BACrC,cAAI;kCAAC;AAGZ;IADC,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;qCACX;AAGhB;IADC,IAAA,gBAAM,EAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;4CAC7B;AAIxB;IAFC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,MAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;IAClD,IAAA,oBAAU,EAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;8BAC1B,IAAI;0CAAC;AAGpB;IADC,IAAA,mBAAS,EAAC,GAAG,EAAE,CAAC,MAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;;oCAC7B;AAGhB;IADC,IAAA,gBAAM,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;qCACV;AAGjB;IADC,IAAA,gBAAM,GAAE;;kCACM;AAGf;IADC,IAAA,0BAAgB,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;8BAC7C,IAAI;uCAAC;AAGhB;IADC,IAAA,0BAAgB,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;8BAC7C,IAAI;uCAAC;AAlCG,IAAI;IADxB,IAAA,gBAAM,EAAC,MAAM,CAAC;GACM,IAAI,CAmCxB;kBAnCoB,IAAI","names":[],"sources":["/home/filippoippolitorodrigues/Área de Trabalho/MYPROJECTS/strider/src/domain/post/entities/post.ts"],"sourcesContent":["import {\n  Entity,\n  CreateDateColumn,\n  UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n} from 'typeorm';\n// eslint-disable-next-line import/no-cycle\nimport User from '../../user/entities/user';\nimport PostType from '../interfaces/post-type';\n\n@Entity('post')\nexport default class Post {\n  @PrimaryGeneratedColumn('uuid', { name: 'id' })\n  id: string;\n\n  @Column({ name: 'user_id' })\n  userId: string;\n\n  @JoinColumn({ name: 'user_id' })\n  @ManyToOne(() => User, (user) => user.posts)\n  user?: User;\n\n  @Column({ nullable: true })\n  content: string;\n\n  @Column({ name: 'reposted_post_id', nullable: true })\n  repostedPostId?: string;\n\n  @ManyToOne(() => Post, (post) => post.repostedPost)\n  @JoinColumn({ name: 'reposted_post_id' })\n  repostedPost?: Post;\n\n  @OneToMany(() => Post, (post) => post.repost)\n  repost?: Post[];\n\n  @Column({ nullable: true })\n  comment?: string;\n\n  @Column()\n  type: PostType;\n\n  @CreateDateColumn({ name: 'created_at', select: false })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', select: false })\n  updatedAt: Date;\n}\n"],"version":3}