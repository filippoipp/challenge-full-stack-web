{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVD;AAAA;AAAA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAAoCC,GAApC,EAAmDC,IAAnD,EAAqE;EAAA;EAAA;EAAA;;EACnE,IAAI;IACF,MAAMC,UAAU;IAAA;IAAA,0BAAG,IAAIC,oBAAJ,EAAH,CAAhB;IACA,MAAMC,QAAQ;IAAA;IAAA,0BAAG,MAAMF,UAAU,CAACJ,MAAX,CAAkBC,GAAG,CAACM,KAAtB,CAAT,CAAd;;IAFE;IAAA;IAGFL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,QAArB;EACD,CAJD,CAIE,OAAOI,KAAP,EAAc;IAAA;IAAA;IACdP,IAAI,CAACO,KAAD,CAAJ;EACD;AACF;;AAED,eAAeC,MAAf,CAAsBV,GAAtB,EAAoCC,GAApC,EAAmDC,IAAnD,EAAqE;EAAA;EAAA;EAAA;;EACnE,IAAI;IACF,MAAMC,UAAU;IAAA;IAAA,2BAAG,IAAIC,oBAAJ,EAAH,CAAhB;IACA,MAAMC,QAAQ;IAAA;IAAA,2BAAG,MAAMF,UAAU,CAACO,MAAX,CAAkBV,GAAG,CAACW,IAAtB,CAAT,CAAd;;IAFE;IAAA;IAGFV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,QAArB;EACD,CAJD,CAIE,OAAOI,KAAP,EAAc;IAAA;IAAA;IACdP,IAAI,CAACO,KAAD,CAAJ;EACD;AACF;;;;AAEDG,kBAAe;EACbb,MADa;EAEbW;AAFa,CAAf","names":["getAll","req","res","next","repository","repository_1","response","query","status","json","error","create","body","exports"],"sources":["/home/filippoippolitorodrigues/√Årea de Trabalho/MYPROJECTS/strider/src/domain/post/controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport PostRepository from './repository';\n\nasync function getAll(req: Request, res: Response, next: NextFunction) {\n  try {\n    const repository = new PostRepository();\n    const response = await repository.getAll(req.query);\n    res.status(200).json(response);\n  } catch (error) {\n    next(error);\n  }\n}\n\nasync function create(req: Request, res: Response, next: NextFunction) {\n  try {\n    const repository = new PostRepository();\n    const response = await repository.create(req.body);\n    res.status(201).json(response);\n  } catch (error) {\n    next(error);\n  }\n}\n\nexport default {\n  getAll,\n  create,\n};\n"]}